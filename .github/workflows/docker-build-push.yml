name: Build and test with Java 17 and Docker

on:
  workflow_call:
    inputs:
      repository:
        required: true
        type: string
      repository_owner:
        required: true
        type: string

    secrets:
      SSH_KEY:
        required: true
      KNOWN_HOSTS:
        required: true
      CR_PAT:
        required: true

env:
  GITHUB_TOKEN: ${{ secrets.CR_PAT }}
  REPOSITORY: ${{ inputs.repository }}

jobs:

  # Build and push docker image
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          if_key_exists: fail

      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ inputs.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'temurin'
          cache: maven

      # Download target to get the common-sdk models for openapi
      - name: Download artifact - target
        uses: actions/download-artifact@v2
        with:
          name: target
          path: target

      - name: Download artifact - app-version
        uses: actions/download-artifact@v2
        with:
          name: app-version

      - name: Print and set app version
        run: |
          cat app-version.txt
          echo APP_VERSION=$(cat app-version.txt) >> $GITHUB_ENV

      - name: Docker build and push
        id: docker_build
        env:
          REGISTRY: ghcr.io
          USERNAME: ${{ inputs.repository_owner }}
          PASSWORD: ${{ secrets.CR_PAT }}
        run: |
          SHA=${{ github.sha }}
          SHORT_SHA=$(git rev-parse --short ${{ github.sha }})
          VERSION=${{ env.APP_VERSION }}
          IMAGE_NAME=ghcr.io/${{ github.repository }}
          
          mvn spring-boot:build-image --file service/pom.xml -Dspring-boot.build-image.imageName=$IMAGE_NAME:$VERSION
          
          docker tag $IMAGE_NAME:$VERSION $IMAGE_NAME:$SHA
          docker tag $IMAGE_NAME:$VERSION $IMAGE_NAME:$SHORT_SHA
          docker tag $IMAGE_NAME:$VERSION $IMAGE_NAME:$VERSION-$SHORT_SHA
          
          docker push $IMAGE_NAME:$VERSION
          docker push $IMAGE_NAME:$SHA
          docker push $IMAGE_NAME:$SHORT_SHA
          docker push $IMAGE_NAME:$VERSION-$SHORT_SHA

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
